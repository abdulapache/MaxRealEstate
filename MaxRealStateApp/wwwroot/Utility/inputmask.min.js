

function setInputMasking() {
 
    $(".input-mask").each(function (index, ele) {
        var maskType = ele.getAttribute("data-mask-type");
        switch (maskType) {
            case "uae_id":
                setUAEIdMasking(ele)
                break;
            case "Passport_No":
                setPassportNoMasking(ele)
                break;
            case "limit":
                setCountryCodeMasking(ele)
                break;
            case "currency":
                setCurrencyMasking(ele)
                break;
            case "percent":
                setPercentMasking(ele)
                break;
            case "number":
                setNumberMasking(ele)
                break;
            case "sqft":
                setSQFTMasking(ele)
                break;
            case "decimal":
                setDecimalMasking(ele)
                break;
            case "telphone":
                setTelephoneNoMasking(ele)
                break;
            case "iban":
                setIbanNoMasking(ele)
                break;
            case "pobox":
                setUAEPoBoxMasking(ele)
                break;
            case "hours":
                setHoursMasking(ele)
                break;
            case "day":
                setDayMasking(ele)
                break;
            case "month":
                setMonthMasking(ele)
                break;
            case "year":
                setYearMasking(ele)
                break;
            case "trans":
                setTransNoMasking(ele)
                break;
            case "ccNumber":
                setCCNumberMasking(ele)
                break;
            case "cvv":
                setCVVMasking(ele)
                break;
            default:
                break;
        }
    });
}

function setCVVMasking(ele) {
    $(ele).inputmask("999");
}

function setCCNumberMasking(ele) {
    $(ele).inputmask("9999-9999-9999-9999");
}

function setTransNoMasking(ele) {
    $(ele).inputmask("999999999999999");
}

function setUAEPoBoxMasking(ele) {
    $(ele).inputmask("999999");
}

function setUAEIdMasking(ele) {
    $(ele).inputmask("784-9999-9999999-9");
}

function setIbanNoMasking(ele) {
    $(ele).inputmask({
        alias: 'numeric',
        allowMinus: false,
        digits: 22,
        rightAlign: false,
        prefix: 'AE'
    });
}

function setTelephoneNoMasking(ele) {
 
    var input = document.createElement("input");
    input.setAttribute("type", "hidden");
    input.setAttribute("name", ele.name);
    input.setAttribute("id", ele.id);
    input.setAttribute("value", ele.value);
    insertAfter(input, ele);
    ele.setAttribute("name", ele.name + "-masked");
    ele.setAttribute("id", ele.id + "-masked");
    window.intlTelInput(ele, {
        initialCountry: "AE",
        separateDialCode: true,
        geoIpLookup: function (callback) {
            $.get("https://ipinfo.io", function () { }, "jsonp").always(function (resp) {
                var countryCode = (resp && resp.country) ? resp.country : "";
                callback(countryCode);
            });
        },
        //utilsScript: "<?php echo base_url()?>/templates/UnionProperties/assets/intl-tel/build/js/utils.js?"
    });
    $(ele).on("countrychange", function (ele) {
        //debugger;
        var mask = ele.target.placeholder.replace(/[0-9]/g, "9");
        $(ele.target).inputmask(mask, { placeholder: "" });
    });
    $(ele).inputmask("99 999 9999", { placeholder: "" });

    $(ele).on("focusout", function (ele) {
        var code = $(ele.target).siblings(".iti__flag-container").find(".iti__selected-dial-code").text().trim();
        var number = code + ele.target.value.replaceAll("-", "");
        $(input).val(number);
    });
}

function insertAfter(newNode, referenceNode) {
    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
}

function setPassportNoMasking(ele) {
    var prefixval = ele.getAttribute("data-mask-prefix") || "ZH"
    $(ele).inputmask(prefixval + "-9999999");
}

function setPercentMasking(ele) {
    var allowminus = ele.getAttribute("allowMinus") == "true" ? true : false;
    var rightAlign = ele.getAttribute("rightAlign") == "true" ? true : false;
    $(ele).inputmask({
        alias: 'numeric',
        digits: 3,
        max: 100,
        allowMinus: allowminus,
        rightAlign: false,
        suffix: '% '
    });
}

function setNumberMasking(ele) {
    var digits = ele.getAttribute("maxlength") || 20;
    var max = ele.getAttribute("max") || 9999999999999999999;
    var min = ele.getAttribute("min") || -999999999999999999;
    var allowminus = ele.getAttribute("allowMinus") == "true" ? true : false;
    var rightAlign = ele.getAttribute("rightAlign") != "false" ? true : false;
    $(ele).inputmask(
        {
            rightAlign: false,
            alias: 'numeric',
            allowMinus: allowminus,
            groupSeparator: ',',
            autoGroup: true,
            decimal: 0,
            max: max,
            min: min,
            prefix: ''
            //mask: "9{0," + digits + "}",
        }
    );
}

function setSQFTMasking(ele) {
    var digits = ele.getAttribute("maxlength") || 20;
    $(ele).inputmask(
        {
            alias: 'numeric',
            allowMinus: false,
            digits: digits,
            suffix: ' sqft',
            groupSeparator: ',',
            autoGroup: true,
        }
    );
}

function setDecimalMasking(ele) {
    var rightAlign = ele.getAttribute("rightAlign") == "true" ? true : false;
    var allowminus = ele.getAttribute("allowMinus") == "true" ? true : false;
    $(ele).inputmask(
        {
            alias: 'currency',
            rightAlign: rightAlign,
            prefix: '',
            //digits: digits,
            groupSeparator: ',',
            autoGroup: true,
            allowMinus: allowminus || false
        }
    );
}

function setHoursMasking(ele) {
    var digits = parseInt(ele.getAttribute("max") || 20);
    $(ele).inputmask(
        {
            alias: 'currency',
            rightAlign: true,
            suffix: ' hrs',
            prefix: '',
            digits: digits
        }
    );
}

function setDayMasking(ele) {
    var digits = parseInt(ele.getAttribute("max") || 20);
    $(ele).inputmask(
        {
            rightAlign: false,
            alias: 'numeric',
            allowMinus: false,
            groupSeparator: ',',
            autoGroup: true,
            decimal: 0,
            max: 999,
            prefix: '',
            suffix: ' day(s)',
            digits: digits
        }
    );
}

function setMonthMasking(ele) {
    var digits = parseInt(ele.getAttribute("max") || 20);
    $(ele).inputmask(
        {
            rightAlign: false,
            alias: 'numeric',
            allowMinus: false,
            groupSeparator: ',',
            autoGroup: true,
            decimal: 0,
            max: 999,
            prefix: '',
            suffix: ' month(s)',
            digits: digits
        }
    );
}

function setYearMasking(ele) {
    var digits = parseInt(ele.getAttribute("max") || 20);
    $(ele).inputmask(
        {
            rightAlign: false,
            alias: 'numeric',
            allowMinus: false,
            groupSeparator: ',',
            autoGroup: true,
            decimal: 0,
            max: 999,
            prefix: '',
            suffix: ' year(s)',
            digits: digits
        }
    );
}

function setCurrencyMasking(ele) {
    var currency = ele.getAttribute("data-mask-currency") || "AED"
    //$(ele).inputmask({ alias: "currency", mask: "0000", prefix: currency + ' ', decimal: 0, autoGroup: true, rightAlign: false });
    $(ele).inputmask(
        {
            prefix: currency + " ",
            groupSeparator: ",",
            alias: "numeric",
            placeholder: " ",
            autoGroup: true,
            decimal: 0,
            digits: 2,
            digitsOptional: true,
            clearMaskOnLostFocus: true,
            rightAlign: false,
        }
    );

}

function getInputValue(element) {
    var ele;
    try {
        ele = typeof (element) == "object" ? $(element) : $("#" + element);
    } catch (e) {
        return "";
    }
    var value = ele.val();
    if (ele.find("option").length > 0) {
        //if (isText) {
        //    //return $('#' + id + " :selected").text();
        //}
        return value;
    }
    else if (ele.attr("type") === "text" || ele.attr("type") === "hidden" || ele.attr("type") === "number" || ele.attr("type") === "tel" || ele.attr("type") === "password" || ele.attr("type") === "email") {
        value = value.trim();
        var maskType = ele.attr("data-mask-type") || ""
        switch (maskType) {
            case "sqft":
                var val = value.replaceAll("sqft", "").replaceAll(",", "").trim();
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
                break;
            //case "telphone":
            //    var val = value;//.replaceAll('-', '');
            //    if (val != null && val != "" && val != undefined) {
            //        var code = ele.parent().find("[class*=flag-container]").find("[class*=selected-dial-code]").text().trim()
            //        return (code + "-" + val);
            //    } else {
            //        return "";
            //    }
            //    break;
            case "decimal":
                var val = value.replaceAll(',', '');
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
                break;
            case "number":
                var val = value.replaceAll(',', '');
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
                break;
            case "currency":
                var val = value.substr(value.substr(value.indexOf("AED"), 4).length).replaceAll(',', '');
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
                break;
            case "percent":
                var val = value.substring(0, value.lastIndexOf("%"));
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
            case "hours":
                var val = value.replaceAll("hrs", "").replaceAll(",", "").trim();
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
            case "day":
                var val = value.replaceAll("day(s)", "").replaceAll(",", "").trim();
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
            case "month":
                var val = value.replaceAll("month(s)", "").replaceAll(",", "").trim();
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
            case "year":
                var val = value.replaceAll("year(s)", "").replaceAll(",", "").trim();
                if (val != null && val != "" && val != undefined && !isNaN(val)) {
                    return parseFloat(val);
                } else {
                    return 0;
                }
            default:
                return value;
                break;
        }
    }
    else if (ele.attr("type") === "checkbox") {
        return ele.prop("checked");
    } else if (ele.is("textarea")) {
        return value;
    }
}

function unMaskedAllInputsValues(divId) {
    if (divId) {
        $("#" + divId + " input.input-mask").each(function (index, element) {
            if (element.getAttribute("data-mask-type") != "telphone") {
                $(element).off().val(getInputValue(element));
            }
        });
    } else {
        $("input.input-mask").each(function (index, element) {
            if (element.getAttribute("data-mask-type") != "telphone") {
                $(element).off().val(getInputValue(element));
            }
        });
    }
}